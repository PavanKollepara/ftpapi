/*
 * This software is the confidential and proprietary information of the author,
 * Sai Pullabhotla. You shall not disclose such Confidential Information and
 * shall use it only in accordance with the terms of the license agreement you
 * entered into with the author. 
 * 
 * THE AUTHOR MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF 
 * THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, OR 
 * NON-INFRINGEMENT. THE AUTHOR SHALL NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY 
 * LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING THIS SOFTWARE OR 
 * ITS DERIVATIVES.
 */
package com.myjavaworld.ftp;

import java.util.EventObject;

/**
 * An event generated by objects of <code>ControlConnection</code>. This event
 * is generated when ever a command is sent to the remote host or a reply is
 * received from the remote host.
 * 
 * @author Sai Pullabhotla, psai [at] jMethods [dot] com
 * @version 2.0
 */
public class ControlConnectionEvent extends EventObject {

	/**
	 * Serial version UID
	 */
	private static final long serialVersionUID = -7114487296458919376L;
	/**
	 * The description of the event.
	 */
	private String message = null;

	/**
	 * Constructs a <code>ControlConnectionEvent</code> object with the
	 * specified source and message.
	 * 
	 * @param source
	 *            The object that generated this event.
	 * @param message
	 *            the description of the event.
	 */
	public ControlConnectionEvent(Object source, String message) {
		super(source);
		this.message = message;
	}

	/**
	 * Gets the descriptive message of this event.
	 * 
	 * @return message Description of this event.
	 */
	public String getMessage() {
		return message;
	}

	/**
	 * Converts this event object to a <code>String</code> and returns it.
	 * 
	 * @return String representation of this event.
	 */
	@Override
	public String toString() {
		return message;
	}
}